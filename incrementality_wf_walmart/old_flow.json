{
  "taskList": [
    "-- TASK 1 :: query_search_campaign_static : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_static",
    "-- TASK 2 :: query_search_campaign_static : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_static using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS ( WITH retailer_info AS (SELECT retailer_id FROM CLIENT_VIEW_CATALOG.udap.retailer_client_details WHERE client_id = 1032 AND retailer_name = 'amazon' LIMIT 1) SELECT * FROM (SELECT client_id, profile_id, TO_DATE(report_date) AS date, campaign_id, LOWER(keyword_text) AS search, SUM(CAST(cost AS DECIMAL (38, 4))) AS cost, SUM(CAST(attributedsales14d AS DECIMAL (38, 4))) AS attributedsales14d, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, ANY_VALUE(r.retailer_id) AS retailer_id FROM CLIENT_VIEW_CATALOG.ams.keywords_headline_report JOIN retailer_info r ON 1 = 1 WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND cost > 0 GROUP BY TO_DATE(report_date), client_id, profile_id, campaign_name, campaign_id, search UNION SELECT client_id, advertiser_id AS profile_id, TO_DATE(report_date) AS report_date, campaign_id, LOWER(bidded_keyword) AS search, SUM(CAST(ad_spend AS DECIMAL (38, 4))) AS cost, SUM(total_attributed_sales) AS attributedsales14d, SUM(clicks) AS clicks, SUM(impressions) AS impressions, 38 AS retailer_id FROM CLIENT_VIEW_CATALOG.walmart_adv.on_demand_keyword_performance_a14 WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND ad_spend > 0 AND campaign_id IN (SELECT DISTINCT campaign_id FROM CLIENT_VIEW_CATALOG.walmart_adv.campaigns WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND LOWER(campaign_type_name) = 'sba' AND LOWER(targeting_type) = 'manual') GROUP BY client_id, profile_id, campaign_id, search, report_date) WHERE retailer_id = 4 )",
    "-- TASK 3 :: query_search_campaign_static : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_static (client_id) VALUES (NULL)",
    "-- TASK 4 :: query_search_campaign_profile_advertising : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_profile_advertising",
    "-- TASK 5 :: query_search_campaign_profile_advertising : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_profile_advertising using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS ( WITH retailer_info AS (SELECT retailer_id FROM CLIENT_VIEW_CATALOG.udap.retailer_client_details WHERE client_id = 1032 AND retailer_name = 'amazon' LIMIT 1) SELECT * FROM (SELECT client_id, profile_id, campaign_id, LOWER(keyword_text) AS search, TO_DATE(report_date) AS report_date, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, SUM(CAST(cost AS DECIMAL (38, 4))) AS cost, SUM(CAST(attributedsales14d AS DECIMAL (38, 4))) AS attributedsales14d, ANY_VALUE(r.retailer_id) AS retailer_id FROM CLIENT_VIEW_CATALOG.ams.keywords_report JOIN retailer_info r ON 1 = 1 WHERE report_date BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND cost > 0 AND keyword_text <> '*' GROUP BY client_id, profile_id, campaign_id, search, report_date UNION SELECT client_id, profile_id, campaign_id, search, report_date, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, SUM(CAST(cost AS DECIMAL (38, 4))) AS cost, SUM(CAST(attributedsales14d AS DECIMAL (38, 4))) AS attributedsales14d, ANY_VALUE(retailer_id) AS retailer_id FROM (SELECT client_id, profile_id, campaign_id, LOWER(search_term) AS search, TO_DATE(report_date) AS report_date, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, SUM(CAST(cost AS DECIMAL (38, 4))) AS cost, SUM(CAST(attributedsales14d AS DECIMAL (38, 4))) AS attributedsales14d, ANY_VALUE(r.retailer_id) AS retailer_id FROM CLIENT_VIEW_CATALOG.ams.keywords_report JOIN retailer_info r ON 1 = 1 WHERE report_date BETWEEN '2025-06-01' AND '2025-06-30' AND cost > 0 AND client_id = 1032 AND campaign_id IN (SELECT DISTINCT campaign_id FROM CLIENT_VIEW_CATALOG.ams.campaigns WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND LOWER(targeting_type) = 'auto') AND NOT search_term IS NULL GROUP BY client_id, profile_id, campaign_id, search, report_date UNION ALL SELECT client_id, profile_id, campaign_id, search, report_date, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, SUM(CAST(cost AS DECIMAL (38, 4))) AS cost, SUM(CAST(attributedsales14d AS DECIMAL (38, 4))) AS attributedsales14d, ANY_VALUE(r.retailer_id) AS retailer_id FROM (SELECT client_id, profile_id, campaign_id, LOWER(search_term) AS search, TO_DATE(report_date) AS report_date, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, SUM(CAST(cost AS DECIMAL (38, 4))) AS cost, SUM(CAST(attributedsales14d AS DECIMAL (38, 4))) AS attributedsales14d FROM CLIENT_VIEW_CATALOG.ams.keywords_report WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND cost > 0 AND client_id = 1032 AND campaign_id IN (SELECT DISTINCT campaign_id FROM CLIENT_VIEW_CATALOG.ams.campaigns WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND LOWER(targeting_type) = 'auto') AND NOT search_term IS NULL GROUP BY client_id, profile_id, campaign_id, search, report_date UNION ALL SELECT client_id, profile_id, campaign_id, LOWER(search_term) AS search, TO_DATE(report_date) AS report_date, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, SUM(CAST(cost AS DECIMAL (38, 4))) AS cost, SUM(CAST(attributedsales14d AS DECIMAL (38, 4))) AS attributedsales14d FROM CLIENT_VIEW_CATALOG.ams.targets_report WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND cost > 0 AND client_id = 1032 AND campaign_id IN (SELECT DISTINCT campaign_id FROM CLIENT_VIEW_CATALOG.ams.campaigns WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND LOWER(targeting_type) = 'auto') AND NOT search_term IS NULL GROUP BY client_id, profile_id, campaign_id, search, report_date) a JOIN retailer_info r ON 1 = 1 GROUP BY client_id, profile_id, campaign_id, search, report_date) GROUP BY client_id, profile_id, campaign_id, search, report_date UNION SELECT client_id, profile_id, campaign_id, search, report_date, clicks, impressions, cost, attributedsales14d, 38 AS retailer_id FROM ((SELECT client_id, advertiser_id AS profile_id, campaign_id, LOWER(bidded_keyword) AS search, TO_DATE(report_date) AS report_date, SUM(clicks) AS clicks, SUM(impressions) AS impressions, SUM(CAST(ad_spend AS DECIMAL (38, 4))) AS cost, SUM(total_attributed_sales) AS attributedsales14d, 38 AS retailer_id FROM CLIENT_VIEW_CATALOG.walmart_adv.on_demand_keyword_performance_a14 WHERE report_date BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND ad_spend > 0 AND campaign_id IN (SELECT DISTINCT campaign_id FROM CLIENT_VIEW_CATALOG.walmart_adv.campaigns WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND LOWER(campaign_type_name) = 'sponsoredproducts' AND LOWER(targeting_type) = 'manual') GROUP BY client_id, profile_id, campaign_id, search, report_date) UNION (SELECT client_id, profile_id, campaign_id, search, report_date, clicks, impressions, cost, attributedsales14d, 38 AS retailer_id FROM (SELECT client_id, advertiser_id AS profile_id, campaign_id, LOWER(searched_keyword) AS search, TO_DATE(report_date) AS report_date, SUM(clicks) AS clicks, SUM(impressions) AS impressions, SUM(CAST(ad_spend AS DECIMAL (38, 4))) AS cost, SUM(total_attributed_sales) AS attributedsales14d FROM CLIENT_VIEW_CATALOG.walmart_adv.on_demand_item_keyword_performance_a14 WHERE report_date BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND ad_spend > 0 AND campaign_id IN (SELECT DISTINCT campaign_id FROM CLIENT_VIEW_CATALOG.walmart_adv.campaigns WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND LOWER(campaign_type_name) = 'sponsoredproducts' AND LOWER(targeting_type) = 'auto') GROUP BY client_id, profile_id, campaign_id, search, report_date)))) WHERE retailer_id = 4 )",
    "-- TASK 6 :: query_search_campaign_profile_advertising : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_profile_advertising (campaign_id) VALUES (NULL)",
    "-- TASK 7 :: query_campaign_portfolio_profile_advertising : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_campaign_portfolio_profile_advertising",
    "-- TASK 8 :: query_campaign_portfolio_profile_advertising : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_campaign_portfolio_profile_advertising using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS ( WITH retailer_info AS (SELECT retailer_id FROM CLIENT_VIEW_CATALOG.udap.retailer_client_details WHERE client_id = 1032 AND retailer_name = 'amazon' LIMIT 1) SELECT * FROM (SELECT client_id, CAST(profile_id AS DECIMAL (38, 0)) AS profile_id, CAST(campaign_id AS DECIMAL (38, 0)) AS campaign_id, CAST(portfolio_id AS DECIMAL (38, 0)) AS portfolio_id, campaign_type, targeting_type, TO_DATE(report_date) AS report_date, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, SUM(CAST(cost AS DECIMAL (38, 4))) AS cost, SUM(CAST(attributedsales14d AS DECIMAL (38, 4))) AS attributedsales14d, ANY_VALUE(r.retailer_id) AS retailer_id FROM CLIENT_VIEW_CATALOG.ams_cubes.campaigns_campaign_workbench JOIN retailer_info r ON 1 = 1 WHERE client_id = 1032 AND cost > 0 AND TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND NOT campaign_type IN ('SB') AND NOT campaign_type IS NULL GROUP BY client_id, profile_id, campaign_id, portfolio_id, campaign_type, targeting_type, report_date UNION SELECT client_id, advertiser_id AS profile_id, campaign_id, advertiser_id AS portfolio_id, campaign_type, targeting_type, TO_DATE(report_date) AS report_date, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, SUM(CAST(ad_spend AS DECIMAL (38, 4))) AS cost, SUM(CAST(total_attributed_sales AS DECIMAL (38, 4))) AS attributedsales14d, 38 AS retailer_id FROM (SELECT * FROM CLIENT_VIEW_CATALOG.walmart_cubes.walmart_campaigns_campaigns_workbench WHERE client_id = 1032) WHERE client_id = 1032 AND ad_spend > 0 AND report_date BETWEEN '2025-06-01' AND '2025-06-30' AND LOWER(campaign_type) = 'sp' GROUP BY client_id, profile_id, campaign_id, portfolio_id, campaign_type, targeting_type, report_date) WHERE retailer_id = 4 )",
    "-- TASK 9 :: query_campaign_portfolio_profile_advertising : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_campaign_portfolio_profile_advertising (client_id) VALUES (NULL)",
    "-- TASK 10 :: query_zippec : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_zippec",
    "-- TASK 11 :: query_zippec : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_zippec using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT DISTINCT listing_rank, CAST(weight AS DECIMAL (38, 4)) AS weight FROM CLIENT_VIEW_CATALOG.aramus_ds.placement_weight",
    "-- TASK 12 :: query_zippec : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_zippec (weight) VALUES (NULL)",
    "-- TASK 13 :: query_campaign : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_campaign",
    "-- TASK 14 :: query_campaign : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_campaign using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS ( WITH retailer_info AS (SELECT retailer_id FROM CLIENT_VIEW_CATALOG.udap.retailer_client_details WHERE client_id = 1032 AND retailer_name = 'amazon' LIMIT 1) SELECT * FROM (SELECT client_id, profile_id, campaign_id, campaign_name, LOWER(keyword_text) AS search, TO_DATE(report_date) AS date, SUM(CAST(cost AS DECIMAL (38, 4))) AS cost, SUM(CAST(attributedsales14d AS DECIMAL (38, 4))) AS attributedsales14d, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, ANY_VALUE(r.retailer_id) AS retailer_id FROM CLIENT_VIEW_CATALOG.ams.keywords_report JOIN retailer_info r ON 1 = 1 WHERE DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND cost > 0 AND keyword_text <> '*' GROUP BY client_id, profile_id, campaign_id, campaign_name, search, TO_DATE(report_date) UNION SELECT client_id, advertiser_id AS profile_id, campaign_id, c_name AS campaign_name, LOWER(bidded_keyword) AS search, TO_DATE(report_date) AS date, SUM(CAST(ad_spend AS DECIMAL (38, 4))) AS cost, SUM(total_Attributed_sales) AS ATTRIBUTEDSALES14D, SUM(clicks) AS clicks, SUM(impressions) AS impressions, 38 AS retailer_id FROM (SELECT * FROM CLIENT_VIEW_CATALOG.walmart_adv.on_demand_keyword_performance_a14 WHERE client_id = 1032) LEFT JOIN (SELECT * FROM (SELECT campaign_id AS c_id, name AS c_name, report_date AS rd, ROW_NUMBER() OVER (PARTITION BY campaign_id ORDER BY report_date DESC NULLS FIRST) AS rn FROM (SELECT * FROM CLIENT_VIEW_CATALOG.walmart_adv.campaigns WHERE client_id = 1032)) WHERE rn = 1) ON (campaign_id = c_id) WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND ad_spend > 0 GROUP BY client_id, profile_id, campaign_id, c_name, search, TO_DATE(report_date)) WHERE retailer_id = 4 )",
    "-- TASK 15 :: query_campaign : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_campaign (client_id) VALUES (NULL)",
    "-- TASK 16 :: query_camp_roas_profile_portfolio_map_sb : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_camp_roas_profile_portfolio_map_sb",
    "-- TASK 17 :: query_camp_roas_profile_portfolio_map_sb : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_camp_roas_profile_portfolio_map_sb using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS ( WITH retailer_info AS (SELECT retailer_id FROM CLIENT_VIEW_CATALOG.udap.retailer_client_details WHERE client_id = 1032 AND retailer_name = 'amazon' LIMIT 1) SELECT * FROM (SELECT client_id, CAST(profile_id AS DECIMAL (38, 0)) AS profile_id, CAST(campaign_id AS DECIMAL (38, 0)) AS campaign_id, CAST(portfolio_id AS DECIMAL (38, 0)) AS portfolio_id, report_date AS date, campaign_type, targeting_type, SUM(CAST(cost AS DECIMAL (38, 4))) AS cost, SUM(CAST(attributedsales14d AS DECIMAL (38, 4))) AS attributedsales14d, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, ANY_VALUE(r.retailer_id) AS retailer_id FROM CLIENT_VIEW_CATALOG.ams_cubes.campaigns_campaign_workbench JOIN retailer_info r ON 1 = 1 WHERE client_id = 1032 AND campaign_type = 'SB' AND report_date BETWEEN '2025-06-01' AND '2025-06-30' GROUP BY client_id, profile_id, campaign_id, portfolio_id, report_date, campaign_type, targeting_type UNION SELECT client_id, advertiser_id AS profile_id, campaign_id, advertiser_id AS portfolio_id, TO_DATE(report_date) AS report_date, campaign_type, targeting_type, SUM(CAST(ad_spend AS DECIMAL (38, 4))) AS cost, SUM(CAST(total_attributed_sales AS DECIMAL (38, 4))) AS attributedsales14d, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, 38 AS retailer_id FROM CLIENT_VIEW_CATALOG.walmart_cubes.walmart_campaigns_campaigns_workbench WHERE client_id = 1032 AND ad_spend > 0 AND report_date BETWEEN '2025-06-01' AND '2025-06-30' AND (LOWER(campaign_type) = 'sb' OR campaign_id IN (SELECT DISTINCT campaign_id FROM CLIENT_VIEW_CATALOG.walmart_adv.campaigns WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND LOWER(campaign_type_name) = 'video' AND LOWER(targeting_type) = 'manual')) GROUP BY client_id, profile_id, campaign_id, portfolio_id, campaign_type, targeting_type, report_date) WHERE retailer_id = 4 )",
    "-- TASK 18 :: query_camp_roas_profile_portfolio_map_sb : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_camp_roas_profile_portfolio_map_sb (client_id) VALUES (NULL)",
    "-- TASK 19 :: get_all_skus : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__get_all_skus",
    "-- TASK 20 :: get_all_skus : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__get_all_skus using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT DISTINCT asin FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.sourcing_product_catalog WHERE client_id = 1032) UNION SELECT DISTINCT asin FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.product_catalog WHERE client_id = 1032) UNION SELECT DISTINCT parent_asin FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.product_catalog WHERE client_id = 1032) UNION SELECT DISTINCT asin FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.product_catalog_udf(1032) WHERE client_id = 1032) UNION SELECT DISTINCT parent_asin FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.product_catalog_udf(1032) WHERE client_id = 1032) UNION SELECT DISTINCT parent_asin FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.sourcing_product_catalog WHERE client_id = 1032) UNION SELECT DISTINCT item_id FROM (SELECT * FROM CLIENT_VIEW_CATALOG.walmart_cubes.product_catalog WHERE client_id = 1032) WHERE NOT item_id IS NULL AND item_id RLIKE '[0-9]+' UNION SELECT DISTINCT item_id FROM (SELECT * FROM CLIENT_VIEW_CATALOG.walmart_api.item_search_id_details WHERE client_id = 1032) UNION SELECT DISTINCT CAST(item_id AS string) FROM (SELECT * FROM CLIENT_VIEW_CATALOG.walmart_api.aditem_entity WHERE client_id = 1032)",
    "-- TASK 21 :: get_client_details : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__get_client_details",
    "-- TASK 22 :: get_client_details : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__get_client_details using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT '2025-06-01' AS start_date, '2025-06-30' AS end_date, 1032 AS client_id, 4 AS retailer_id",
    "-- TASK 23 :: query_search_campaign_video : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_video",
    "-- TASK 24 :: query_search_campaign_video : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_video using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS ( WITH retailer_info AS (SELECT retailer_id FROM CLIENT_VIEW_CATALOG.udap.retailer_client_details WHERE client_id = 1032 AND retailer_name = 'amazon' LIMIT 1) SELECT * FROM (SELECT client_id, profile_id, TO_DATE(report_date) AS date, campaign_id, LOWER(keyword_text) AS search, SUM(CAST(cost AS DECIMAL (38, 4))) AS cost, SUM(CAST(attributedsales14d AS DECIMAL (38, 4))) AS attributedsales14d, SUM(CAST(clicks AS DECIMAL (38, 0))) AS clicks, SUM(CAST(impressions AS DECIMAL (38, 0))) AS impressions, ANY_VALUE(r.retailer_id) AS retailer_id FROM CLIENT_VIEW_CATALOG.ams.keywords_sb_video_headline_report JOIN retailer_info r ON 1 = 1 WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND cost > 0 GROUP BY TO_DATE(report_date), client_id, profile_id, campaign_name, campaign_id, search UNION SELECT client_id, advertiser_id AS profile_id, TO_DATE(report_date) AS report_date, campaign_id, LOWER(bidded_keyword) AS search, SUM(CAST(ad_spend AS DECIMAL (38, 4))) AS cost, SUM(total_attributed_sales) AS attributedsales14d, SUM(clicks) AS clicks, SUM(impressions) AS impressions, 38 AS retailer_id FROM CLIENT_VIEW_CATALOG.walmart_adv.on_demand_keyword_performance_a14 WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND ad_spend > 0 AND campaign_id IN (SELECT DISTINCT campaign_id FROM CLIENT_VIEW_CATALOG.walmart_adv.campaigns WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND LOWER(campaign_type_name) = 'video' AND LOWER(targeting_type) = 'manual') GROUP BY client_id, profile_id, campaign_id, search, report_date) WHERE retailer_id = 4 )",
    "-- TASK 25 :: query_search_campaign_video : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_video (client_id) VALUES (NULL)",
    "-- TASK 26 :: query_raw_listing_rank_from_archive_sb : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_archive_sb",
    "-- TASK 27 :: query_raw_listing_rank_from_archive_sb : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_archive_sb using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS ( WITH retailer_info AS (SELECT retailer_id FROM CLIENT_VIEW_CATALOG.udap.retailer_client_details WHERE client_id = 1032 AND retailer_name = 'amazon' LIMIT 1) SELECT * FROM (SELECT search, comp_sku, CASE WHEN comp_sku IN (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__get_all_skus) THEN 'client' ELSE 'comp' END AS client_flag, searh_type, feed_date, search_rank, RANK() OVER (PARTITION BY search, feed_date ORDER BY sku_search_rank ASC NULLS LAST) AS sku_search_rank, r.retailer_id FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.search_data_archive WHERE client_id = 1032) JOIN retailer_info r ON 1 = 1 WHERE DATE(feed_date) BETWEEN '2025-06-01' AND '2025-06-30' AND LOWER(searh_type) IN ('organic', 'sponsored_video', 'header', 'sponsored') AND NOT sku_search_rank IS NULL AND NOT search_rank IS NULL AND LOWER(search) IN (SELECT DISTINCT search FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_static UNION SELECT DISTINCT search FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_video)) WHERE retailer_id = 4 )",
    "-- TASK 28 :: query_raw_listing_rank_from_archive_sb : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_archive_sb (search) VALUES (NULL)",
    "-- TASK 29 :: query_keyword_type_data_sb : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_keyword_type_data_sb",
    "-- TASK 30 :: query_keyword_type_data_sb : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_keyword_type_data_sb using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT DISTINCT LOWER(keyword_text) AS search, keyword_type FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams_recommendations.keyword_classification WHERE client_id = 1032) WHERE LOWER(keyword_text) IN (SELECT DISTINCT LOWER(search) FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_static UNION SELECT DISTINCT LOWER(search) FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_video)",
    "-- TASK 31 :: query_keyword_type_data_sb : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_keyword_type_data_sb (search) VALUES (NULL)",
    "-- TASK 32 :: query_keyword_type_data : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_keyword_type_data",
    "-- TASK 33 :: query_keyword_type_data : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_keyword_type_data using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT DISTINCT LOWER(keyword_text) AS search, keyword_type FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams_recommendations.keyword_classification WHERE client_id = 1032) WHERE LOWER(keyword_text) IN (SELECT DISTINCT search FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_campaign)",
    "-- TASK 34 :: query_keyword_type_data : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_keyword_type_data (search) VALUES (NULL)",
    "-- TASK 35 :: query_raw_listing_rank_from_custom_crawl : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_custom_crawl",
    "-- TASK 36 :: query_raw_listing_rank_from_custom_crawl : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_custom_crawl using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT DISTINCT search, comp_sku, client_flag, UPPER(REPLACE(searh_type, 'sponsored_product', 'sponsored')) AS searh_type, feed_date, search_rank, RANK() OVER (PARTITION BY search, feed_date ORDER BY sku_search_rank ASC NULLS LAST) AS sku_search_rank, retailer_id FROM (SELECT * FROM (SELECT a.sku AS comp_sku, CASE WHEN a.sku IN (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__get_all_skus) THEN 'client' ELSE 'comp' END AS client_flag, a.search_term AS search, a.listing_type AS searh_type, a.listing_rank AS sku_search_rank, a.listing_category_rank AS search_rank, a.crawl_time AS feed_date, a.retailer_id, ROW_NUMBER() OVER (PARTITION BY search_term, DATE_TRUNC('HOUR', crawl_time), listing_rank ORDER BY crawl_time DESC NULLS FIRST) AS rn FROM CLIENT_VIEW_CATALOG.aramus.omni_search_product_mapping AS a WHERE a.retailer_id = 4 AND a.client_id = 1032 AND a.search_term IN (SELECT DISTINCT search FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_profile_advertising)) WHERE searh_type IN ('organic', 'sponsored_product') AND NOT sku_search_rank IS NULL AND NOT search_rank IS NULL AND NOT client_flag IS NULL AND DATE(feed_date) BETWEEN '2025-06-01' AND '2025-06-30' AND rn = 1)",
    "-- TASK 37 :: query_raw_listing_rank_from_custom_crawl : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_custom_crawl (search) VALUES (NULL)",
    "-- TASK 38 :: query_raw_listing_rank_from_custom_crawl_sb : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_custom_crawl_sb",
    "-- TASK 39 :: query_raw_listing_rank_from_custom_crawl_sb : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_custom_crawl_sb using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT DISTINCT search, comp_sku, client_flag, UPPER(REPLACE(searh_type, 'sponsored_product', 'sponsored')) AS searh_type, feed_date, search_rank, RANK() OVER (PARTITION BY search, feed_date ORDER BY sku_search_rank ASC NULLS LAST) AS sku_search_rank, retailer_id FROM (SELECT * FROM (SELECT sku AS comp_sku, CASE WHEN sku IN (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__get_all_skus) THEN 'client' ELSE 'comp' END AS client_flag, a.search_term AS search, a.listing_type AS searh_type, a.listing_rank AS sku_search_rank, a.listing_category_rank AS search_rank, a.crawl_time AS feed_date, a.retailer_id, ROW_NUMBER() OVER (PARTITION BY search_term, DATE_TRUNC('HOUR', crawl_time), listing_rank ORDER BY crawl_time DESC NULLS FIRST) AS rn FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.omni_search_product_mapping WHERE client_id = 1032) AS a WHERE a.retailer_id = 4 AND LOWER(a.search_term) IN (SELECT DISTINCT search FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_static UNION SELECT DISTINCT search FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_video)) WHERE LOWER(searh_type) IN ('organic', 'header', 'sponsored_video', 'sponsored_product') AND NOT sku_search_rank IS NULL AND NOT search_rank IS NULL AND NOT client_flag IS NULL AND DATE(feed_date) BETWEEN '2025-06-01' AND '2025-06-30' AND rn = 1)",
    "-- TASK 40 :: query_raw_listing_rank_from_custom_crawl_sb : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_custom_crawl_sb (search) VALUES (NULL)",
    "-- TASK 41 :: query_raw_listing_rank_from_archive : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_archive",
    "-- TASK 42 :: query_raw_listing_rank_from_archive : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_archive using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS ( WITH retailer_info AS (SELECT retailer_id FROM CLIENT_VIEW_CATALOG.udap.retailer_client_details WHERE client_id = 1032 AND retailer_name = 'amazon' LIMIT 1) SELECT * FROM (SELECT search, comp_sku, CASE WHEN comp_sku IN (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__get_all_skus) THEN 'client' ELSE 'comp' END AS client_flag, searh_type, feed_date, search_rank, RANK() OVER (PARTITION BY search, feed_date ORDER BY sku_search_rank ASC NULLS LAST) AS sku_search_rank, r.retailer_id FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.search_data_archive WHERE client_id = 1032) JOIN retailer_info r ON 1 = 1 WHERE DATE(feed_date) BETWEEN '2025-06-01' AND '2025-06-30' AND searh_type IN ('ORGANIC', 'SPONSORED') AND NOT sku_search_rank IS NULL AND NOT search_rank IS NULL AND search IN (SELECT DISTINCT search FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_search_campaign_profile_advertising) ORDER BY search NULLS LAST, feed_date NULLS LAST, sku_search_rank NULLS LAST) WHERE retailer_id = 4 )",
    "-- TASK 43 :: query_raw_listing_rank_from_archive : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_archive (search) VALUES (NULL)",
    "-- TASK 44 :: query_sov_data_spons_from_archive : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_from_archive",
    "-- TASK 45 :: query_sov_data_spons_from_archive : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_from_archive using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT DISTINCT inc_a.search, inc_a.date, inc_b.total_sponsored_positions, inc_b.total_sponsored_weight FROM (SELECT DISTINCT search, DATE(feed_date) AS date FROM (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_archive)) AS inc_a LEFT JOIN (SELECT LOWER(search) AS search, TO_DATE(feed_date) AS date, CAST(AVG(total_sponsored_positions) AS DECIMAL (38, 0)) AS total_sponsored_positions, CAST(AVG(total_sponsored_weight) AS DECIMAL (38, 4)) AS total_sponsored_weight FROM (SELECT search, feed_date, COUNT(searh_type) AS total_sponsored_positions, SUM(weight) AS total_sponsored_weight FROM (SELECT DISTINCT search, comp_sku, client_flag, searh_type, DATE_TRUNC('MINUTE', feed_date) AS feed_date, search_rank, RANK() OVER (PARTITION BY search, feed_date ORDER BY sku_search_rank ASC NULLS LAST) AS sku_search_rank, weight FROM (SELECT t1.search, t1.comp_sku, t1.client_flag, t1.searh_type, t1.feed_date, t1.search_rank, t1.sku_search_rank, CAST(COALESCE(t2.weight, 5) AS DECIMAL (38, 4)) AS weight FROM (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_archive) AS t1 LEFT JOIN (SELECT * FROM CLIENT_VIEW_CATALOG.aramus_ds.placement_weight) AS t2 ON (t1.sku_search_rank = t2.listing_rank)) AS t3) WHERE searh_type = 'SPONSORED' GROUP BY search, feed_date) GROUP BY search, date) AS inc_b ON (inc_a.search = inc_b.search AND inc_a.date = inc_b.date)",
    "-- TASK 46 :: query_sov_data_spons_from_archive : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_from_archive (search) VALUES (NULL)",
    "-- TASK 47 :: query_sov_data_spons_client_from_custom_crawl : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_client_from_custom_crawl",
    "-- TASK 48 :: query_sov_data_spons_client_from_custom_crawl : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_client_from_custom_crawl using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT LOWER(search) AS search, TO_DATE(feed_date) AS date, CAST(AVG(client_sponsored_positions) AS DECIMAL (38, 0)) AS client_sponsored_positions, retailer_id FROM (SELECT search, feed_date, COUNT(client_flag) AS client_sponsored_positions, retailer_id FROM (SELECT DISTINCT search, comp_sku, client_flag, searh_type, DATE_TRUNC('MINUTE', feed_date) AS feed_date, search_rank, RANK() OVER (PARTITION BY search, feed_date ORDER BY sku_search_rank ASC NULLS LAST) AS sku_search_rank, weight, retailer_id FROM (SELECT t1.search, t1.comp_sku, t1.client_flag, t1.searh_type, t1.feed_date, t1.search_rank, t1.sku_search_rank, CAST(COALESCE(t2.weight, 5) AS DECIMAL (38, 4)) AS weight, retailer_id FROM (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_custom_crawl) AS t1 LEFT JOIN (SELECT * FROM CLIENT_VIEW_CATALOG.aramus_ds.placement_weight) AS t2 ON (t1.sku_search_rank = t2.listing_rank)) AS t3) WHERE searh_type = 'SPONSORED' AND client_flag = 'client' GROUP BY search, feed_date, retailer_id) GROUP BY search, date, retailer_id",
    "-- TASK 49 :: query_sov_data_spons_client_from_custom_crawl : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_client_from_custom_crawl (search) VALUES (NULL)",
    "-- TASK 50 :: query_sov_data_organic_client_from_archive : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_organic_client_from_archive",
    "-- TASK 51 :: query_sov_data_organic_client_from_archive : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_organic_client_from_archive using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT LOWER(search) AS search, TO_DATE(feed_date) AS date, CAST(AVG(client_organic_weight) AS DECIMAL (38, 4)) AS client_organic_weight, CAST(AVG(client_organic_positions) AS DECIMAL (38, 0)) AS client_organic_positions FROM (SELECT search, feed_date, SUM(weight) AS client_organic_weight, COUNT(client_flag) AS client_organic_positions FROM (SELECT DISTINCT search, comp_sku, client_flag, searh_type, DATE_TRUNC('MINUTE', feed_date) AS feed_date, search_rank, RANK() OVER (PARTITION BY search, feed_date ORDER BY sku_search_rank ASC NULLS LAST) AS sku_search_rank, weight FROM (SELECT t1.search, t1.comp_sku, t1.client_flag, t1.searh_type, t1.feed_date, t1.search_rank, t1.sku_search_rank, CAST(COALESCE(t2.weight, 5) AS DECIMAL (38, 4)) AS weight FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_archive AS t1 LEFT JOIN (SELECT * FROM CLIENT_VIEW_CATALOG.aramus_ds.placement_weight) AS t2 ON (t1.sku_search_rank = t2.listing_rank)) AS t3) WHERE searh_type = 'ORGANIC' AND client_flag = 'client' GROUP BY search, feed_date) GROUP BY search, date ORDER BY search NULLS LAST, date NULLS LAST",
    "-- TASK 52 :: query_sov_data_organic_client_from_archive : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_organic_client_from_archive (search) VALUES (NULL)",
    "-- TASK 53 :: query_sov_data_spons_client_from_archive : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_client_from_archive",
    "-- TASK 54 :: query_sov_data_spons_client_from_archive : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_client_from_archive using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT LOWER(search) AS search, TO_DATE(feed_date) AS date, CAST(AVG(client_sponsored_positions) AS DECIMAL (38, 0)) AS client_sponsored_positions FROM (SELECT search, feed_date, COUNT(client_flag) AS client_sponsored_positions FROM (SELECT DISTINCT search, comp_sku, client_flag, searh_type, DATE_TRUNC('MINUTE', feed_date) AS feed_date, search_rank, RANK() OVER (PARTITION BY search, feed_date ORDER BY sku_search_rank ASC NULLS LAST) AS sku_search_rank, weight FROM (SELECT t1.search, t1.comp_sku, t1.client_flag, t1.searh_type, t1.feed_date, t1.search_rank, t1.sku_search_rank, CAST(COALESCE(t2.weight, 5) AS DECIMAL (38, 4)) AS weight FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_archive AS t1 LEFT JOIN (SELECT * FROM CLIENT_VIEW_CATALOG.aramus_ds.placement_weight) AS t2 ON (t1.sku_search_rank = t2.listing_rank)) AS t3) WHERE searh_type = 'SPONSORED' AND client_flag = 'client' GROUP BY search, feed_date) GROUP BY search, date ORDER BY search NULLS LAST, date NULLS LAST",
    "-- TASK 55 :: query_sov_data_spons_client_from_archive : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_client_from_archive (search) VALUES (NULL)",
    "-- TASK 56 :: query_sov_data_organic_client_from_custom_crawl : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_organic_client_from_custom_crawl",
    "-- TASK 57 :: query_sov_data_organic_client_from_custom_crawl : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_organic_client_from_custom_crawl using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT LOWER(search) AS search, TO_DATE(feed_date) AS date, CAST(AVG(client_organic_weight) AS DECIMAL (38, 4)) AS client_organic_weight, CAST(AVG(client_organic_positions) AS DECIMAL (38, 0)) AS client_organic_positions, retailer_id FROM (SELECT search, feed_date, SUM(weight) AS client_organic_weight, COUNT(client_flag) AS client_organic_positions, retailer_id FROM (SELECT DISTINCT search, comp_sku, client_flag, searh_type, DATE_TRUNC('MINUTE', feed_date) AS feed_date, search_rank, RANK() OVER (PARTITION BY search, feed_date ORDER BY sku_search_rank ASC NULLS LAST) AS sku_search_rank, weight, retailer_id FROM (SELECT t1.search, t1.comp_sku, t1.client_flag, t1.searh_type, t1.feed_date, t1.search_rank, t1.sku_search_rank, CAST(COALESCE(t2.weight, 5) AS DECIMAL (38, 4)) AS weight, retailer_id FROM (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_custom_crawl) AS t1 LEFT JOIN (SELECT * FROM CLIENT_VIEW_CATALOG.aramus_ds.placement_weight) AS t2 ON (t1.sku_search_rank = t2.listing_rank)) AS t3) WHERE searh_type = 'ORGANIC' AND client_flag = 'client' GROUP BY search, feed_date, retailer_id) GROUP BY search, date, retailer_id",
    "-- TASK 58 :: query_sov_data_organic_client_from_custom_crawl : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_organic_client_from_custom_crawl (search) VALUES (NULL)",
    "-- TASK 59 :: query_sov_data_spons_from_custom_crawl : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_from_custom_crawl",
    "-- TASK 60 :: query_sov_data_spons_from_custom_crawl : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_from_custom_crawl using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT DISTINCT inc_a.search, inc_a.date, inc_b.total_sponsored_positions, inc_b.total_sponsored_weight FROM (SELECT DISTINCT search, TO_DATE(feed_date) AS date FROM (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_custom_crawl)) AS inc_a LEFT JOIN (SELECT LOWER(search) AS search, TO_DATE(feed_date) AS date, CAST(AVG(total_sponsored_positions) AS DECIMAL (38, 0)) AS total_sponsored_positions, CAST(AVG(total_sponsored_weight) AS DECIMAL (38, 4)) AS total_sponsored_weight, retailer_id FROM (SELECT search, feed_date, COUNT(searh_type) AS total_sponsored_positions, SUM(weight) AS total_sponsored_weight, retailer_id FROM (SELECT DISTINCT search, comp_sku, client_flag, searh_type, DATE_TRUNC('MINUTE', feed_date) AS feed_date, search_rank, RANK() OVER (PARTITION BY search, feed_date ORDER BY sku_search_rank ASC NULLS LAST) AS sku_search_rank, weight, retailer_id FROM (SELECT t1.search, t1.comp_sku, t1.client_flag, t1.searh_type, t1.feed_date, t1.search_rank, t1.sku_search_rank, CAST(COALESCE(t2.weight, 5) AS DECIMAL (38, 4)) AS weight, retailer_id FROM (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_raw_listing_rank_from_custom_crawl) AS t1 LEFT JOIN (SELECT * FROM CLIENT_VIEW_CATALOG.aramus_ds.placement_weight) AS t2 ON (t1.sku_search_rank = t2.listing_rank)) AS t3) WHERE searh_type = 'SPONSORED' GROUP BY search, feed_date, retailer_id) GROUP BY search, date, retailer_id) AS inc_b ON (inc_a.search = inc_b.search AND inc_a.date = inc_b.date)",
    "-- TASK 61 :: query_sov_data_spons_from_custom_crawl : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__query_sov_data_spons_from_custom_crawl (search) VALUES (NULL)",
    "-- TASK 62 :: incrementality_sb_python : Non-SQL Module or Empty SQL Module",
    "-- TASK 63 :: incrementality_python : Non-SQL Module or Empty SQL Module",
    "-- TASK 64 :: sb_incrementality_report_final : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__sb_incrementality_report_final",
    "-- TASK 65 :: sb_incrementality_report_final : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__sb_incrementality_report_final using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__incrementality_sb_python WHERE report_type IN ('search', 'campaign')",
    "-- TASK 66 :: temp_incrementality_report_walmart : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__temp_incrementality_report_walmart",
    "-- TASK 67 :: temp_incrementality_report_walmart : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__temp_incrementality_report_walmart using delta TBLPROPERTIES ('delta.feature.allowColumnDefaults'='supported') AS SELECT * FROM CLIENT_VIEW_CATALOG.walmart_ds.incrementality_report WHERE client_id = 1032",
    "-- TASK 68 :: temp_incrementality_report_walmart : DELETE FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__temp_incrementality_report_walmart WHERE (report_date BETWEEN '2025-06-01' AND '2025-06-30' AND client_id = 1032 AND get_json_object(lower(additional_info), '$.retailer_id') = 4) OR report_date IS NULL OR client_id IS NULL OR additional_info IS NULL",
    "-- TASK 69 :: temp_incrementality_report_walmart : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__temp_incrementality_report_walmart SELECT CLIENT_ID, SEARCH, PLACEMENT, KEYWORD_TYPE, REPORT_DATE, CREATION_DATE, CAMPAIGN_ID, CAMPAIGN_NAME, PORTFOLIO_ID, PORTFOLIO_NAME, PROFILE_ID, PROFILE_NAME, CASE WHEN UPPER(campaign_type) = 'SPONSOREDPRODUCTS' THEN 'SP' ELSE campaign_type END AS campaign_type, INITCAP(TARGETING_TYPE), REPORT_TYPE, REPORT_CALCULATION_TYPE, TOTAL_SPONSORED_POSITIONS, TOTAL_SPONSORED_WEIGHT, CLIENT_SPONSORED_POSITIONS, CLIENT_SPONSORED_WEIGHT, CLIENT_ORGANIC_POSITIONS, CLIENT_ORGANIC_WEIGHT, CLICKS, IMPRESSIONS, COST, ATTRIBUTEDSALES14D, ROAS, INCREMENTAL_FRACTION, INCREMENTAL_FRACTION_BAND, INCREMENTAL_SALES, IROAS, COVERAGE, COVERAGE_TYPE, CAMPAIGN_NAME_TOP_1, CAMPAIGN_NAME_TOP_2, CAMPAIGN_NAME_TOP_3, CAMPAIGN_ID_TOP_1, CAMPAIGN_ID_TOP_2, CAMPAIGN_ID_TOP_3, PORTFOLIO_NAME_TOP_1, PORTFOLIO_NAME_TOP_2, PORTFOLIO_NAME_TOP_3, PORTFOLIO_ID_TOP_1, PORTFOLIO_ID_TOP_2, PORTFOLIO_ID_TOP_3, PROFILE_NAME_TOP_1, PROFILE_NAME_TOP_2, PROFILE_NAME_TOP_3, PROFILE_ID_TOP_1, PROFILE_ID_TOP_2, PROFILE_ID_TOP_3, to_json(map('retailer_id', 4)) AS additional_info FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__incrementality_python WHERE NOT client_id IS NULL AND NOT report_date IS NULL",
    "-- TASK 70 :: temp_incrementality_report_walmart : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__temp_incrementality_report_walmart SELECT *, to_json(map('retailer_id', 4)) AS additional_info FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__sb_incrementality_report_final WHERE NOT client_id IS NULL AND NOT report_date IS NULL AND LOWER(report_type) IN ('search', 'campaign')",
    "-- TASK 71 :: temp_incrementality_report_walmart : UPDATE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__temp_incrementality_report_walmart SET search = REPLACE(search, '{pipe}', '|') WHERE search LIKE '%{pipe}%'",
    "-- TASK 72 :: temp_profile_incrementality_report_walmart : DELETE FROM CLIENT_CATALOG.walmart_ds.profile_incrementality_report where client_id=1032",
    "-- TASK 73 :: temp_profile_incrementality_report_walmart : INSERT INTO CLIENT_CATALOG.walmart_ds.profile_incrementality_report (client_id, report_date, creation_date, profile_id, profile_name, report_type, report_calculation_type, clicks, impressions, cost, attributedsales14d, roas, incremental_fraction, incremental_fraction_band, incremental_sales, iroas, coverage, coverage_type, additional_info) SELECT client_id, report_date, creation_date, profile_id, profile_name, report_type, report_calculation_type, clicks, impressions, cost, attributedsales14d, roas, incremental_fraction, incremental_fraction_band, incremental_sales, iroas, coverage, coverage_type, additional_info FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__temp_incrementality_report_walmart WHERE report_type = 'profile' AND client_id = 1032",
    "-- TASK 74 :: temp_campaign_incrementality_report_walmart : DELETE FROM CLIENT_CATALOG.walmart_ds.campaign_incrementality_report where client_id=1032",
    "-- TASK 75 :: temp_campaign_incrementality_report_walmart : INSERT INTO CLIENT_CATALOG.walmart_ds.campaign_incrementality_report (client_id, keyword_type, report_date, creation_date, campaign_id, campaign_name, portfolio_id, portfolio_name, profile_id, profile_name, campaign_type, targeting_type, report_type, report_calculation_type, clicks, impressions, cost, attributedsales14d, roas, incremental_fraction, incremental_fraction_band, incremental_sales, iroas, coverage, coverage_type, additional_info) SELECT client_id, keyword_type, report_date, creation_date, campaign_id, campaign_name, portfolio_id, portfolio_name, profile_id, profile_name, campaign_type, targeting_type, report_type, report_calculation_type, clicks, impressions, cost, attributedsales14d, roas, incremental_fraction, incremental_fraction_band, incremental_sales, iroas, coverage, coverage_type, additional_info FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__temp_incrementality_report_walmart WHERE report_type = 'campaign' AND client_id = 1032",
    "-- TASK 76 :: temp_search_incrementality_report_walmart : DELETE FROM CLIENT_CATALOG.walmart_ds.search_incrementality_report where client_id=1032",
    "-- TASK 77 :: temp_search_incrementality_report_walmart : INSERT INTO CLIENT_CATALOG.walmart_ds.search_incrementality_report (client_id, search, keyword_type, report_date, creation_date, campaign_type, targeting_type, report_type, report_calculation_type, total_sponsored_positions, total_sponsored_weight, client_sponsored_positions, client_sponsored_weight, client_organic_positions, client_organic_weight, clicks, impressions, cost, attributedsales14d, roas, incremental_fraction, incremental_fraction_band, incremental_sales, iroas, campaign_name_top_1, campaign_name_top_2, campaign_name_top_3, campaign_id_top_1, campaign_id_top_2, campaign_id_top_3, portfolio_name_top_1, portfolio_name_top_2, portfolio_name_top_3, portfolio_id_top_1, portfolio_id_top_2, portfolio_id_top_3, profile_name_top_1, profile_name_top_2, profile_name_top_3, profile_id_top_1, profile_id_top_2, profile_id_top_3, additional_info) SELECT client_id, search, keyword_type, report_date, creation_date, campaign_type, targeting_type, report_type, report_calculation_type, total_sponsored_positions, total_sponsored_weight, client_sponsored_positions, client_sponsored_weight, client_organic_positions, client_organic_weight, clicks, impressions, cost, attributedsales14d, roas, incremental_fraction, incremental_fraction_band, incremental_sales, iroas, campaign_name_top_1, campaign_name_top_2, campaign_name_top_3, campaign_id_top_1, campaign_id_top_2, campaign_id_top_3, portfolio_name_top_1, portfolio_name_top_2, portfolio_name_top_3, portfolio_id_top_1, portfolio_id_top_2, portfolio_id_top_3, profile_name_top_1, profile_name_top_2, profile_name_top_3, profile_id_top_1, profile_id_top_2, profile_id_top_3, additional_info FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__temp_incrementality_report_walmart WHERE report_type = 'search' AND client_id = 1032",
    "-- TASK 78 :: temp_incrementality_report_final_walmart : DELETE FROM CLIENT_CATALOG.walmart_ds.incrementality_report where client_id=1032",
    "-- TASK 79 :: temp_incrementality_report_final_walmart : INSERT INTO CLIENT_CATALOG.walmart_ds.incrementality_report SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__temp_incrementality_report_walmart WHERE client_id = 1032",
    "-- TASK 80 :: campaign_asin_incremental_data_walmart : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__campaign_asin_incremental_data_walmart",
    "-- TASK 81 :: campaign_asin_incremental_data_walmart : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__campaign_asin_incremental_data_walmart AS SELECT q1.client_id, q1.campaign_id, q1.sku, q1.report_date, q1.cost, q1.attributedsales14d, q2.incremental_fraction FROM (SELECT client_id, campaign_id, sku, report_date, SUM(TRY_CAST(cost AS FLOAT)) AS cost, SUM(TRY_CAST(attributedsales14d AS FLOAT)) AS attributedsales14d FROM (SELECT DISTINCT client_id, campaign_id, sku, report_date, ad_spend AS cost, TOTAL_ATTRIBUTED_SALES AS attributedsales14d FROM CLIENT_VIEW_CATALOG.walmart_cubes.walmart_campaigns_skus_workbench WHERE TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND ((LOWER(campaign_type) = 'sp') OR (LOWER(campaign_type) = 'sb')) AND client_id = 1032) subquery GROUP BY client_id, campaign_id, sku, report_date) q1 LEFT JOIN (SELECT client_id, campaign_id, report_date, TRY_CAST(incremental_fraction AS FLOAT) AS incremental_fraction FROM CLIENT_VIEW_CATALOG.walmart_ds.campaign_incrementality_report WHERE DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30' AND ((LOWER(campaign_type) = 'sp') OR (LOWER(campaign_type) = 'sb static') OR (LOWER(campaign_type) = 'sb video')) AND report_calculation_type = 'Incrementality' AND client_id = 1032) q2 ON q1.campaign_id = q2.campaign_id AND q1.report_date = q2.report_date AND q1.client_id = q2.client_id",
    "-- TASK 82 :: temp_incrementality_metadata_walmart : DELETE FROM CLIENT_CATALOG.walmart_ds.incrementality_metadata_walmart where client_id=1032",
    "-- TASK 83 :: temp_incrementality_metadata_walmart : INSERT INTO CLIENT_CATALOG.walmart_ds.incrementality_metadata_walmart (client_id, report_date, total_keyword_cost_performance, total_cost_intersection, total_keyword_cost_if, KEYWORD_IF_COVERAGE, total_campaign_cost_if, total_keyword_count_performance, total_scraped_keyword_count, total_count_intersection, keyword_count_if, campaign_count_if, min_keyword_if, max_keyword_if, min_campaign_if, max_campaign_if) SELECT client_id, rd AS report_date, total_keyword_cost_performance, total_cost_intersection, total_keyword_cost_if, IF(total_keyword_cost_performance = 0, 0, total_keyword_cost_if / total_keyword_cost_performance) AS KEYWORD_IF_COVERAGE, total_campaign_cost_if, total_keyword_count_performance, total_scraped_keyword_count, total_count_intersection, keyword_count_if, campaign_count_if, min_keyword_if, max_keyword_if, min_campaign_if, max_campaign_if FROM (SELECT client_id, DATE(date) AS rd FROM CLIENT_CATALOG.aramus.all_dates_2010_2050 WHERE client_id = 1032) AS a LEFT JOIN (SELECT report_date, COUNT(*) AS keyword_count_if, MIN(incremental_fraction) AS min_keyword_if, MAX(incremental_fraction) AS max_keyword_if, SUM(cost) AS total_keyword_cost_if FROM CLIENT_CATALOG.walmart_ds.search_incrementality_report WHERE campaign_type IN ('SP') AND targeting_type = 'Manual' AND get_json_object(additional_info, '$.retailer_id') = 38 AND client_id = 1032 GROUP BY 1) AS b ON (a.rd = b.report_Date) LEFT JOIN (SELECT report_date, COUNT(*) AS campaign_count_if, MIN(incremental_fraction) AS min_campaign_if, MAX(incremental_fraction) AS max_campaign_if, SUM(cost) AS total_campaign_cost_if FROM CLIENT_CATALOG.walmart_ds.campaign_incrementality_report WHERE campaign_type IN ('SP') AND targeting_type = 'Manual' AND report_calculation_Type = 'Incrementality' AND get_json_object(additional_info, '$.retailer_id') = 38 AND client_id = 1032 GROUP BY 1) AS c ON (a.rd = c.report_Date) LEFT JOIN (SELECT report_Date, SUM(total_keyword_count_performance) AS total_keyword_count_performance, SUM(total_keyword_cost_performance) AS total_keyword_cost_performance FROM (SELECT bidded_keyword AS keyword_text, DATE(report_date) AS report_Date, COUNT(DISTINCT bidded_keyword) AS total_keyword_count_performance, SUM(CAST(ad_spend AS DECIMAL (38, 4))) AS total_keyword_cost_performance FROM CLIENT_CATALOG.walmart_adv.on_demand_keyword_performance_a14 WHERE LENGTH(bidded_keyword) > 1 AND ad_spend > 0 AND campaign_id IN (SELECT DISTINCT campaign_id FROM (SELECT * FROM CLIENT_CATALOG.walmart_adv.campaigns WHERE client_id = 1032) WHERE LOWER(campaign_type_name) = 'sponsoredproducts' AND LOWER(targeting_type) = 'manual') AND client_id = 1032 GROUP BY 1, 2) GROUP BY 1) AS d ON (a.rd = d.report_Date) LEFT JOIN (SELECT crawl_time AS report_Date, COUNT(DISTINCT search_term) AS total_scraped_keyword_count FROM (SELECT DISTINCT search_term, DATE(crawl_time) AS crawl_time, retailer_id FROM (SELECT * FROM CLIENT_CATALOG.aramus.omni_search_product_mapping WHERE client_id = 1032) WHERE retailer_id = 38 UNION SELECT DISTINCT search, DATE(feed_date), 4 AS retailer_id FROM (SELECT * FROM CLIENT_CATALOG.aramus.search_data_archive WHERE client_id = 1032) WHERE 4 = 38) GROUP BY 1) AS e ON (a.rd = e.report_Date) LEFT JOIN (SELECT report_date, COUNT(*) AS total_count_intersection, SUM(total_keyword_cost_performance) AS total_cost_intersection FROM (SELECT bidded_keyword AS keyword_text, DATE(report_date) AS report_Date, COUNT(DISTINCT bidded_keyword) AS total_keyword_count_performance, SUM(CAST(ad_spend AS DECIMAL (38, 4))) AS total_keyword_cost_performance FROM CLIENT_CATALOG.walmart_adv.on_demand_keyword_performance_a14 WHERE LENGTH(bidded_keyword) > 1 AND ad_spend > 0 AND campaign_id IN (SELECT DISTINCT campaign_id FROM (SELECT * FROM CLIENT_CATALOG.walmart_adv.campaigns WHERE client_id = 1032) WHERE LOWER(campaign_type_name) = 'sponsoredproducts' AND LOWER(targeting_type) = 'manual') AND client_id = 1032 GROUP BY 1, 2) AS f INNER JOIN (SELECT DISTINCT search_term, DATE(crawl_time) AS crawl_time, retailer_id FROM (SELECT * FROM CLIENT_CATALOG.aramus.omni_search_product_mapping WHERE client_id = 1032) WHERE retailer_id = 38 UNION SELECT * FROM (SELECT DISTINCT search, DATE(feed_date), 4 AS retailer_id FROM (SELECT * FROM CLIENT_CATALOG.aramus.search_data_archive WHERE client_id = 1032)) WHERE retailer_id = 38) AS h ON (h.search_term = f.keyword_text AND h.crawl_time = DATE(f.report_Date)) GROUP BY 1) AS g ON (a.rd = g.report_Date) GROUP BY 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 HAVING rd BETWEEN '2022-01-01' AND CURRENT_DATE ORDER BY rd NULLS LAST",
    "-- TASK 84 :: temp_sku_incrementality_report_walmart : DELETE FROM CLIENT_CATALOG.walmart_ds.sku_incrementality_report WHERE client_id = 1032 AND TO_DATE(report_date) BETWEEN '2025-06-01' AND '2025-06-30'",
    "-- TASK 85 :: temp_sku_incrementality_report_walmart : INSERT INTO CLIENT_CATALOG.walmart_ds.sku_incrementality_report (client_id, sku, report_date, INCREMENTAL_FRACTION) SELECT client_id, sku, report_date, COALESCE(try_divide(sum(incremental_fraction_attributedsales14d), sum(attributedsales14d)), try_divide(sum(incremental_fraction_cost), sum(cost))) AS INCREMENTAL_FRACTION FROM (SELECT client_id, campaign_id, sku, report_date, cost, attributedsales14d, incremental_fraction, (incremental_fraction * cost) AS incremental_fraction_cost, (incremental_fraction * attributedsales14d) AS incremental_fraction_attributedsales14d FROM CLIENT_VIEW_CATALOG.temp_ccp_1032.e0__campaign_asin_incremental_data_walmart WHERE incremental_fraction IS NOT NULL) GROUP BY client_id, sku, report_date"
  ],
  "executionType": "TRIGGER",
  "status": "ACCEPTED"
}