{
  "taskList": [
    "-- TASK 1 :: all_keywords : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords",
    "-- TASK 2 :: all_keywords : CREATE TABLE IF NOT EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords (search STRING, source_table STRING, priority DECIMAL (2, 0), cost DECIMAL (18, 5), keyword_context STRING, rn DECIMAL (6, 0))",
    "-- TASK 3 :: all_keywords : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords SELECT LOWER(search) AS search, LOWER(source_table) AS source_table, rank AS priority, cost, keyword_context, ROW_NUMBER() OVER (PARTITION BY search ORDER BY rank NULLS LAST) AS rn FROM (SELECT DISTINCT search, 'aramus.search_data_info' AS source_table, 1 AS rank, CAST(NULL AS DECIMAL (18, 5)) AS cost, 'SOV' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.search_data_info WHERE client_id = 851) UNION SELECT DISTINCT keyword, 'aramus_ds.custom_keywords_for_classification' AS source_table, 2 AS rank, NULL AS cost, 'custom_keywords' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus_ds.custom_keywords_for_classification WHERE client_id = 851) UNION SELECT DISTINCT BIDDED_KEYWORD AS search, 'WALMART_ADV.ON_DEMAND_KEYWORD_PERFORMANCE_A14' AS source_table, 3 AS rank, SUM(AD_SPEND), 'keyword' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.walmart_adv.on_demand_keyword_performance_a14 WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT KEYWORD AS search, 'WALMART_ADV.AD_GROUP_BIDDED_KEYWORDS' AS source_table, 3 AS rank, NULL, 'keyword' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.walmart_adv.ad_group_bidded_keywords WHERE client_id = 851) UNION SELECT DISTINCT name AS search, 'citrus_adv.product_ads_search_term_report' AS source_table, 3 AS rank, clicks_spend AS cost, 'keyword_text' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.citrus_adv.product_ads_search_term_report WHERE client_id = 851) UNION SELECT DISTINCT KEYWORD AS search, 'instacart_adv.keywords' AS source_table, 3 AS rank, SUM(spend), 'keyword' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.instacart_adv.keywords WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT keyword AS search, 'criteo.campaigns_keyword_report_14d' AS source_table, 3 AS rank, SUM(spend), 'keyword' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.criteo.campaigns_keyword_report_14d WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT keyword_text, 'ams_cubes.search_terms_union_keywords_campaigns_workbench' AS source_table, 3 AS rank, SUM(spend) AS cost, 'keyword' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams_cubes.search_terms_union_keywords_campaigns_workbench WHERE client_id = 851) WHERE TO_DATE(REPORT_DATE) > DATEADD(day, -180, CURRENT_DATE) GROUP BY 1 UNION SELECT DISTINCT (keyword_text) AS search, 'ams.keywords_report' AS source_table, 3 AS rank, SUM(cost), 'keyword' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.keywords_report WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT keyword_text AS search, 'ams.keywords_without_segment_report' AS source_table, 3 AS rank, SUM(cost), 'keyword' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.keywords_without_segment_report WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT keyword_text AS search, 'ams.keywords_with_segment_sb_video_headline_report' AS source_table, 3 AS rank, SUM(cost), 'keyword' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.keywords_with_segment_sb_video_headline_report WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT (keyword_text) AS search, 'ams.keywords_headline_report' AS source_table, 3 AS rank, SUM(cost), 'keyword' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.keywords_headline_report WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT (keyword_text) AS search, 'ams.keywords_report_deactive_profiles' AS source_table, 3 AS rank, SUM(cost), 'keyword' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.keywords_report_deactive_profiles WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT (keyword_text) AS search, 'ams.asins_report' AS source_table, 4 AS rank, NULL, 'keyword' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.asins_report WHERE client_id = 851) UNION SELECT DISTINCT (keyword_text) AS search, 'ams.keywords' AS source_table, 4 AS rank, NULL, 'keyword' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.keywords WHERE client_id = 851) UNION SELECT DISTINCT (keyword_text) AS search, 'ams.keywords_deactive_profiles' AS source_table, 4 AS rank, NULL, 'keyword' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.keywords_deactive_profiles WHERE client_id = 851) UNION SELECT DISTINCT search_keyword, 'search_terms_union_keywords_campaigns_workbench' AS source_table, 13 AS rank, SUM(spend) AS cost, 'search_term' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams_cubes.search_terms_union_keywords_campaigns_workbench WHERE client_id = 851) WHERE TO_DATE(REPORT_DATE) > DATEADD(day, -180, CURRENT_DATE) GROUP BY 1 UNION SELECT DISTINCT (MISSPELT_KEYWORD_TEXT) AS search, 'ams_recommendations.misspelt_keywords' AS source_table, 14 AS rank, NULL, 'search_term' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams_recommendations.misspelt_keywords WHERE client_id = 851) UNION SELECT DISTINCT search_term AS search, 'ams.keywords_report' AS source_table, 5 AS rank, SUM(cost), 'search_term' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.keywords_report WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT SEARCHED_KEYWORD AS search, 'WALMART_ADV.ON_DEMAND_KEYWORD_PERFORMANCE_A14' AS source_table, 15 AS rank, SUM(AD_SPEND), 'search_term' AS keyword_context FROM (SELECT * FROM CLIENT_VIEW_CATALOG.walmart_adv.on_demand_keyword_performance_a14 WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT SEARCH_TERM AS search, 'aramus.omni_sov_keywords_input' AS source_table, 15 AS rank, NULL, 'search_term' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.omni_sov_keywords_input WHERE client_id = 851) UNION SELECT DISTINCT search_term AS search, 'ams.keywords_with_segment_headline_report' AS source_table, 15 AS rank, SUM(cost), 'search_term' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.keywords_with_segment_headline_report WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT (search_term) AS search, 'ams.targets_report' AS source_table, 15 AS rank, SUM(cost), 'search_term' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.targets_report WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT (search_term) AS search, 'ams.keywords_report_deactive_profiles' AS source_table, 15 AS rank, SUM(cost), 'search_term' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.keywords_report_deactive_profiles WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT SEARCH_TERM AS search, 'ams.keywords_with_segment_sb_video_headline_report' AS source_table, 15 AS rank, SUM(COST), 'search_term' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.ams.keywords_with_segment_sb_video_headline_report WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT bidded_keywords, 'samsclub_adv.keyword_report' AS source_table, 3 AS rank, SUM(ad_spend), 'keyword' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.samsclub_adv.keyword_report WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT searched_keyword, 'samsclub_adv.keyword_report' AS source_table, 13 AS rank, SUM(ad_spend), 'search_term' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.samsclub_adv.keyword_report WHERE client_id = 851) GROUP BY 1 UNION SELECT DISTINCT keyword_text, 'samsclub_adv.keywords_entity' AS source_table, 14 AS rank, 0 AS ad_Spend, 'keyword' FROM (SELECT * FROM CLIENT_VIEW_CATALOG.samsclub_adv.keywords_entity WHERE client_id = 851) GROUP BY 1) WHERE NOT search IS NULL AND LENGTH(search) < 200 AND LENGTH(search) > 1",
    "-- TASK 4 :: fetch_comp_brand_gen_names : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__fetch_comp_brand_gen_names",
    "-- TASK 5 :: fetch_comp_brand_gen_names : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__fetch_comp_brand_gen_names AS (SELECT DISTINCT TERM AS NAME, COALESCE(CLASSIFICATION_CATEGORY_BY_DV_TEAM, CLASSIFICATION_CATEGORY_BY_DS_CODE) AS category_type FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus_ds.keyword_classification_brand_comp_generic_classified_metadata WHERE client_id = 851) WHERE (IS_VALIDATED_BY_DS_CODE = TRUE OR CLASSIFICATION_CATEGORY_BY_DV_TEAM IS NOT NULL) AND feed_date = (SELECT MAX(feed_date) FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus_ds.keyword_classification_brand_comp_generic_classified_metadata WHERE client_id = 851)))",
    "-- TASK 6 :: all_keywords_for_kc : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_for_kc",
    "-- TASK 7 :: all_keywords_for_kc : CREATE TABLE IF NOT EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_for_kc (FEED_DATE DATE, KEYWORD_TEXT STRING, KEYWORD_TYPE STRING, COST DECIMAL (18, 5), SOURCE ARRAY<STRING>)",
    "-- TASK 8 :: all_keywords_for_kc : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_for_kc SELECT CURRENT_DATE AS FEED_DATE, a.search AS KEYWORD_TEXT, KEYWORD_CONTEXT AS KEYWORD_TYPE, b.COST, SOURCE FROM (SELECT search, KEYWORD_CONTEXT FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords WHERE rn = 1) AS a INNER JOIN (SELECT SEARCH, ARRAY_AGG(SOURCE_TABLE) AS source, SUM(COST) AS cost FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords GROUP BY 1) AS b ON (a.search = b.search)",
    "-- TASK 9 :: all_keywords_for_classification_phase_addition : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_for_classification_phase_addition",
    "-- TASK 10 :: all_keywords_for_classification_phase_addition : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_for_classification_phase_addition AS SELECT feed_Date, keyword_text, keyword_type, cost, CASE WHEN ARRAY_CONTAINS(SOURCE, CAST('aramus.search_data_info' AS STRING)) THEN 'phase 1' WHEN ARRAY_CONTAINS(SOURCE, CAST('aramus_ds.custom_keywords_for_classification' AS STRING)) THEN 'phase 1' WHEN (keyword_type = 'keyword' AND cost > 0) THEN 'phase 2' WHEN (keyword_type = 'search_term' AND cost > 0) THEN 'phase 3' ELSE 'phase 4' END AS phase, SEARCH_FREQUENCY_RANK, source FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_for_kc LEFT JOIN (SELECT SEARCH_TERM, MEDIAN(SEARCH_FREQUENCY_RANK) AS search_frequency_rank FROM CLIENT_VIEW_CATALOG.aramus.search_keyword_report WHERE feed_date > DATEADD(day, -30, CURRENT_DATE) AND department LIKE '%mazon%' AND client_id = 851 GROUP BY 1) ON (LOWER(search_term) = LOWER(keyword_text))",
    "-- TASK 11 :: all_keywords_rank_calculation : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_rank_calculation",
    "-- TASK 12 :: all_keywords_rank_calculation : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_rank_calculation AS SELECT *, ROW_NUMBER() OVER (ORDER BY PHASE, COST DESC NULLS LAST) AS keyword_rank FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_for_classification_phase_addition",
    "-- TASK 13 :: all_keywords_unclassified : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_unclassified",
    "-- TASK 14 :: all_keywords_unclassified : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_unclassified AS SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_rank_calculation WHERE keyword_text IS NOT NULL AND LOWER(keyword_text) NOT IN (SELECT LOWER(keyword) FROM CLIENT_VIEW_CATALOG.ams_recommendations.auto_classified_keywords WHERE client_id = 851 AND is_classified_by_model = TRUE)",
    "-- TASK 15 :: mark_numbers_as_generic : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_numbers_as_generic",
    "-- TASK 16 :: mark_numbers_as_generic : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_numbers_as_generic AS SELECT KEYWORD_TEXT, SOURCE AS source_table, COST, SEARCH_FREQUENCY_RANK, keyword_type, 'Generic' AS classified_category FROM (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_unclassified WHERE LOWER(KEYWORD_TEXT) RLIKE '^[^a-z]*$' AND (LENGTH(keyword_text) <> 10 AND SUBSTR(keyword_text, 1, 2) <> '01'))",
    "-- TASK 17 :: mark_asins_as_client_comp : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_asins_as_client_comp",
    "-- TASK 18 :: mark_asins_as_client_comp : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_asins_as_client_comp AS SELECT KEYWORD_TEXT, SOURCE AS source_table, COST, SEARCH_FREQUENCY_RANK, keyword_type, CASE WHEN asin IS NOT NULL THEN 'Branded' ELSE 'Competitor' END AS classified_category FROM (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_unclassified WHERE LOWER(KEYWORD_TEXT) RLIKE '^b[0-9]{1}[a-zA-Z0-9]{8}$' OR LOWER(KEYWORD_TEXT) RLIKE '[0-1]{1}[0-9]{1}[a-zA-Z0-9]{8}' OR LOWER(KEYWORD_TEXT) RLIKE 'asin[ ]*=.*' OR LOWER(KEYWORD_TEXT) RLIKE 'asin-expanded[ ]*=.*') AS a LEFT JOIN (SELECT LOWER(asin) AS asin FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.product_catalog_udf(851) WHERE client_id = 851) WHERE LENGTH(asin) > 7 UNION SELECT LOWER(parent_asin) AS asin FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.product_catalog_udf(851) WHERE client_id = 851) WHERE LENGTH(asin) > 7 UNION SELECT DISTINCT ASIN FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.sourcing_product_catalog WHERE client_id = 851) WHERE LENGTH(asin) > 7 UNION SELECT DISTINCT PARENT_ASIN FROM (SELECT * FROM CLIENT_VIEW_CATALOG.aramus.sourcing_product_catalog WHERE client_id = 851) WHERE LENGTH(asin) > 7) ON (CONTAINS(LOWER(KEYWORD_TEXT), LOWER(asin)))",
    "-- TASK 19 :: mark_category_as_generic : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_category_as_generic",
    "-- TASK 20 :: mark_category_as_generic : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_category_as_generic AS SELECT KEYWORD_TEXT, SOURCE AS source_table, COST, SEARCH_FREQUENCY_RANK, keyword_type, IF(LOWER(keyword_text) RLIKE 'audience=.*', 'AUDIENCE', 'Generic') AS classified_category FROM (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_unclassified WHERE LOWER(KEYWORD_TEXT) RLIKE 'category[ ]*=.+' OR LOWER(KEYWORD_TEXT) RLIKE 'views[ ]*=.+' OR LOWER(keyword_text) RLIKE 'audience=.*' OR LOWER(KEYWORD_TEXT) IN ('loose-match', 'substitutes', 'close-match', 'complements', '(_targeting_auto_)') OR LOWER(KEYWORD_TEXT) = 'similar-product' OR LOWER(KEYWORD_TEXT) LIKE 'keyword-group=%' OR LOWER(KEYWORD_TEXT) LIKE '%keywords-related-to-your%')",
    "-- TASK 21 :: mark_category_as_generic : UPDATE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_category_as_generic SET classified_category = 'CATEGORY' WHERE LOWER(KEYWORD_TEXT) RLIKE 'category[ ]*=.+' OR LOWER(KEYWORD_TEXT) RLIKE 'views[ ]*=.+' OR LOWER(KEYWORD_TEXT) = 'similar-product' OR LOWER(KEYWORD_TEXT) LIKE '%keywords-related-to-your%' OR LOWER(KEYWORD_TEXT) LIKE 'keyword-group=%'",
    "-- TASK 22 :: mark_category_as_generic : UPDATE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_category_as_generic SET classified_category = 'AUDIENCE' WHERE LOWER(KEYWORD_TEXT) RLIKE 'audience=.*'",
    "-- TASK 23 :: mark_category_as_generic : UPDATE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_category_as_generic SET classified_category = 'AUTO' WHERE LOWER(KEYWORD_TEXT) IN ('loose-match', 'substitutes', 'close-match', 'complements', '(_targeting_auto_)')",
    "-- TASK 24 :: all_keywords_unclassified_final : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_unclassified_final",
    "-- TASK 25 :: all_keywords_unclassified_final : CREATE TABLE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_unclassified_final AS SELECT DISTINCT LOWER(REPLACE(REPLACE(search, '\"', ''), CHR(13), '')) AS search, keyword_rank AS source_table FROM (SELECT KEYWORD_TEXT AS search, CAST(NULL AS ARRAY<STRING>) AS source_table, keyword_rank, ROW_NUMBER() OVER (ORDER BY keyword_rank NULLS LAST) AS priority_rank FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_unclassified WHERE LOWER(KEYWORD_TEXT) NOT IN (SELECT LOWER(keyword_text) FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_asins_as_client_comp UNION SELECT LOWER(keyword_text) FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_category_as_generic UNION SELECT LOWER(keyword_text) FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_numbers_as_generic)) WHERE CEIL(priority_rank / 8000, 0) = 1",
    "-- TASK 26 :: all_keywords_unclassified_final : UPDATE CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_unclassified_final SET search = REPLACE(REPLACE(search, '+', ' '), '|', ' ')",
    "-- TASK 27 :: keyword_classifier_python : Non-SQL Module or Empty SQL Module",
    "-- TASK 28 :: keyword_classifier : DROP TABLE IF EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__keyword_classifier",
    "-- TASK 29 :: keyword_classifier : CREATE TABLE IF NOT EXISTS CLIENT_VIEW_CATALOG.temp_ccp_851.e0__keyword_classifier (keyword STRING, classified_category STRING, is_classified_by_model BOOLEAN, classification_confidence_score DECIMAL (18, 4), classification_confidence_level STRING, classification_date DATE, metaphone_match_with_client_brandname DECIMAL (18, 4), metaphone_match_client_brandname_list STRING, max_metaphone_match_length_with_client_brandname DECIMAL (18, 0), min_edit_dist_with_client_brandname DECIMAL (18, 4), min_edit_distance_client_brandname_list STRING, metaphone_match_with_competitor_brandname DECIMAL (18, 4), metaphone_match_competitor_brandname_list STRING, max_metaphone_match_length_with_competitor_brandname DECIMAL (18, 0), min_edit_dist_with_competitor_brandname DECIMAL (18, 4), min_edit_distance_competitor_brandname_list STRING, metaphone_match_generic_name DECIMAL (18, 0), metaphone_match_generic_name_list STRING, max_metaphone_match_length_with_generic_name DECIMAL (18, 0), MIN_EDIT_DISTANCE_WITH_generic_NAME DECIMAL (18, 0), MIN_EDIT_DISTANCE_generic_NAME_LIST STRING, GENERIC_TERM_THAT_LOOKALIKE_CLIENT_BRANDNAME STRING, min_edit_distance_GENERIC_LOOKALIKE_client_brand_name DECIMAL (18, 4), GENERIC_TERM_THAT_LOOKALIKE_COMPETITOR_BRANDNAME STRING, min_edit_distance_GENERIC_LOOKALIKE_competitor_brandname DECIMAL (18, 4), is_generic_keyword_present DECIMAL (18, 0), is_branded_keyword_present DECIMAL (18, 0), is_comp_keyword_present DECIMAL (18, 0), is_generic_lookalike_brand_keyword_present DECIMAL (18, 0), is_generic_lookalike_comp_keyword_present DECIMAL (18, 0), detailed_classification_number DECIMAL (18, 0), detailed_classification_type STRING, generic_predicted DECIMAL (18, 0), competitor_predicted DECIMAL (18, 0), lowconfidence_predicted DECIMAL (18, 0), branded_probable DECIMAL (18, 0), comp_probable DECIMAL (18, 0), source_table STRING, IS_NEW_KEYWORD_PRESENT DECIMAL (18, 0), new_keyword_list STRING, dv_team_validation_date DATE, dv_team_classification_type STRING, classified_by STRING, search_frequency_rank DECIMAL (18, 0), ADDITIONAL_INFO STRING, cost DECIMAL (18, 0))",
    "-- TASK 30 :: keyword_classifier : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_851.e0__keyword_classifier (SELECT LOWER(KEYWORD_TEXT) AS keyword, class_text AS classified_category, classified AS is_classified_by_model, confidence AS classification_confidence_score, CAST(NULL AS STRING) AS confidence_level, CURRENT_DATE AS classification_date, metaphone_match AS metaphone_match_with_client_brandname, metaphone_match_keyword AS metaphone_match_client_brandname_list, metaphone_match_keyword_length AS max_metaphone_match_length_with_client_brandname, edit_dist AS min_edit_dist_with_client_brandname, min_distance_keyword AS min_edit_distance_client_brandname_list, metaphone_match_comp AS metaphone_match_with_competitor_brandname, metaphone_match_keyword_comp AS metaphone_match_competitor_brandname_list, metaphone_match_keyword_comp_length AS max_metaphone_match_length_with_competitor_brandname, edit_dist_comp AS min_edit_dist_with_competitor_brandname, min_distance_keyword_comp AS min_edit_distance_competitor_brandname_list, metaphone_match_generic AS metaphone_match_generic_name, metaphone_match_keyword_generic AS metaphone_match_generic_name_list, metaphone_match_keyword_generic_length AS max_metaphone_match_length_with_generic_name, edit_dist_generic AS MIN_EDIT_DISTANCE_WITH_generic_NAME, min_distance_keyword_generic AS MIN_EDIT_DISTANCE_generic_NAME_LIST, generic_lookalike AS GENERIC_TERM_THAT_LOOKALIKE_CLIENT_BRANDNAME, generic_lookalike_dist AS min_edit_distance_GENERIC_LOOKALIKE_client_brand_name, generic_lookalike_comp AS GENERIC_TERM_THAT_LOOKALIKE_COMPETITOR_BRANDNAME, generic_lookalike_dist_comp AS min_edit_distance_GENERIC_LOOKALIKE_competitor_brandname, category_predicted AS is_generic_keyword_present, branded_predicted AS is_branded_keyword_present, comp_predicted AS is_comp_keyword_present, generic_lookalike_predicted AS is_generic_lookalike_brand_keyword_present, generic_lookalike_comp_predicted AS is_generic_lookalike_comp_keyword_present, class_detailed AS detailed_classification_number, class_detailed_text AS detailed_classification_type, generic_predicted, competitor_predicted, lowconfidence_predicted, branded_probable, comp_probable, source AS source_table, new_keyword_flag AS IS_NEW_KEYWORD_PRESENT, new_keywords AS new_keyword_list, CAST(NULL AS STRING) AS dv_team_validation_date, CAST(NULL AS STRING) AS dv_team_classification_type, 'ds_code' AS classified_by, SEARCH_FREQUENCY_RANK AS search_frequency_rank, to_json(named_struct('iteration_number', 1, 'keyword_type', B.KEYWORD_TYPE, 'timestamp', CURRENT_TIMESTAMP())) AS ADDITIONAL_INFO, B.COST AS cost FROM (SELECT * FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__keyword_classifier_python WHERE source_table <> 'nan') AS A INNER JOIN (SELECT KEYWORD_TEXT, KEYWORD_TYPE, COST, PHASE, keyword_rank, SEARCH_FREQUENCY_RANK, GET(source, 0) AS source FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__all_keywords_unclassified) AS B ON (A.source_table = B.KEYWORD_RANK))",
    "-- TASK 31 :: keyword_classifier : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_851.e0__keyword_classifier (keyword, classified_category, is_classified_by_model, classification_confidence_score, classification_date, source_table, SEARCH_FREQUENCY_RANK, cost, classified_by, ADDITIONAL_INFO) SELECT LOWER(keyword_text) AS keyword_text, classified_category, TRUE AS is_classified_by_model, 1 AS classification_confidence_score, CURRENT_DATE AS classification_date, GET(source_table, 0) AS source_table, SEARCH_FREQUENCY_RANK, cost, 'modulus', client_view_catalog.modulus_1611.object_construct(array('iteration_number', STRING(1), 'keyword_type', KEYWORD_TYPE, 'timestamp', STRING(CURRENT_TIMESTAMP()))) AS ADDITIONAL_INFO FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_asins_as_client_comp",
    "-- TASK 32 :: keyword_classifier : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_851.e0__keyword_classifier (keyword, classified_category, is_classified_by_model, classification_confidence_score, classification_date, source_table, SEARCH_FREQUENCY_RANK, cost, classified_by, ADDITIONAL_INFO) SELECT LOWER(keyword_text) AS keyword_text, classified_category, TRUE AS is_classified_by_model, 1 AS classification_confidence_score, CURRENT_DATE AS classification_date, GET(source_table, 0) AS source_table, SEARCH_FREQUENCY_RANK, cost, 'modulus', client_view_catalog.modulus_1611.object_construct(array('iteration_number', STRING(1), 'keyword_type', KEYWORD_TYPE, 'timestamp', STRING(CURRENT_TIMESTAMP()))) AS ADDITIONAL_INFO FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_category_as_generic",
    "-- TASK 33 :: keyword_classifier : INSERT INTO CLIENT_VIEW_CATALOG.temp_ccp_851.e0__keyword_classifier (keyword, classified_category, is_classified_by_model, classification_confidence_score, classification_date, source_table, SEARCH_FREQUENCY_RANK, cost, classified_by, ADDITIONAL_INFO) SELECT LOWER(keyword_text) AS keyword_text, classified_category, TRUE AS is_classified_by_model, 1 AS classification_confidence_score, CURRENT_DATE AS classification_date, GET(source_table, 0) AS source_table, SEARCH_FREQUENCY_RANK, cost, 'modulus', client_view_catalog.modulus_1611.object_construct(array('iteration_number', STRING(1), 'keyword_type', KEYWORD_TYPE, 'timestamp', STRING(CURRENT_TIMESTAMP()))) AS ADDITIONAL_INFO FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__mark_numbers_as_generic",
    "-- TASK 34 :: keyword_classifier_final : INSERT INTO CLIENT_CATALOG.ams_recommendations.auto_classified_keywords (SELECT 851 AS client_id, * FROM CLIENT_VIEW_CATALOG.temp_ccp_851.e0__keyword_classifier WHERE keyword NOT IN (SELECT keyword FROM CLIENT_CATALOG.ams_recommendations.auto_classified_keywords WHERE client_id = 851 AND IS_CLASSIFIED_BY_MODEL = TRUE))"
  ],
  "executionType": "TRIGGER",
  "status": "ACCEPTED"
}